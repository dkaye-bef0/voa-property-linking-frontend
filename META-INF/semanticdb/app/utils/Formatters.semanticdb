
Í∑%
È
Ô
_root_.scala.Predef.String#^
◊
€
R_root_.utils.Formatters.formatDate(Ljava/time/LocalDate;)Ljava/lang/String;.(date)Ç
°
§
x_root_.scala.collection.TraversableLike#map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;.b
‹	„	X_root_.utils.Formatters.capitalizedAddress(Lmodels/Address;)Ljava/lang/String;.(address)m
≠±c_root_.utils.Formatters.buildQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(name)
∆Ã_root_.models.a
≥
ª
W_root_.scala.collection.TraversableOnce#mkString(Ljava/lang/String;)Ljava/lang/String;.^
∞∂T_root_.scala.collection.TraversableLike#filter(Lscala/Function1;)Ljava/lang/Object;.E
˙Ç;_root_.models.PropertyAddress#toString()Ljava/lang/String;.
†§_root_.java.time.
Õ”_root_.scala.Option#d
˝
ÉZ_root_.java.time.LocalDate#format(Ljava/time/format/DateTimeFormatter;)Ljava/lang/String;.r
·˙f_root_.utils.Formatters.buildUppercaseQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.
ÅÖ_root_.scala.Some.a
å
ï
W_root_.scala.collection.TraversableLike#filterNot(Lscala/Function1;)Ljava/lang/Object;.b
Õ	‘	X_root_.utils.Formatters.capitalizedAddress(Lmodels/Address;)Ljava/lang/String;.(address)v
ñül_root_.java.time.format.DateTimeFormatter.ofPattern(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;.;
ˇÉ1_root_.java.lang.String#trim()Ljava/lang/String;./
ÂÍ%_root_.models.PropertyAddress#(lines)x
˚ˇl_root_.utils.Formatters.buildUppercaseQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(name)v
Úˆl_root_.utils.Formatters.buildUppercaseQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(name)(
†Ø_root_.models.PropertyAddress#1
À’%app/utils/Formatters.scala@1867..18774
ÛÑ*_root_.java.time.format.DateTimeFormatter.G
◊Ê=_root_.models.PropertyAddress.;_root_.models.PropertyAddress#'
‰	È	_root_.models.Address#(line3)d
˜Z_root_.utils.Formatters.capitalizedAddress(Ljava/lang/String;)Ljava/lang/String;.(address)[
Ö	ó	O_root_.utils.Formatters.capitalizedAddress(Lmodels/Address;)Ljava/lang/String;.B
ÊÒ8_root_.java.lang.String#toUpperCase()Ljava/lang/String;.%
≥π_root_.scala.Predef.String#X
Ã
÷
L_root_.utils.Formatters.formatDate(Ljava/time/LocalDate;)Ljava/lang/String;.%
ôü_root_.scala.Predef.String#o
…Õe_root_.models.PropertyAddress#copy(Lscala/collection/Seq;Ljava/lang/String;)Lmodels/PropertyAddress;.%
™∞_root_.scala.Predef.String#j
’‹`_root_.utils.Formatters.capitalizedAddress(Lmodels/PropertyAddress;)Ljava/lang/String;.(address)1
Üê%app/utils/Formatters.scala@1670..1680f
°®Z_root_.utils.Formatters.capitalizedAddress(Ljava/lang/String;)Ljava/lang/String;.(address)p
≈ d_root_.utils.Formatters.buildQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(value)%
Ω√_root_.scala.Predef.String#Q
©™G_root_.scala.StringContext#s(Lscala/collection/Seq;)Ljava/lang/String;./
¥æ%app/utils/Formatters.scala@1670..1680^
∆ R_root_.utils.Formatters.formatTime(Ljava/time/LocalTime;)Ljava/lang/String;.(time)
ÂÍ_root_.utils.&
∫	Ω	_root_.scala.collection.Seq.
∆ _root_.scala.Some.b
˙	Å
X_root_.utils.Formatters.capitalizedAddress(Lmodels/Address;)Ljava/lang/String;.(address)%
ﬂÂ_root_.scala.Predef.String#
õü_root_.java.n
ÓÛd_root_.utils.Formatters.buildQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(value)%
Çà_root_.scala.Predef.String# 
°	®	_root_.models.Address#"
•´_root_.java.time.format.%
≤∏_root_.scala.Predef.String#d
ò	ü	X_root_.utils.Formatters.capitalizedAddress(Lmodels/Address;)Ljava/lang/String;.(address)\
ÁÎR_root_.utils.Formatters.formatTime(Ljava/time/LocalTime;)Ljava/lang/String;.(time)-
ò
ü
#_root_.java.lang.String#isEmpty()Z.w
≥∏m_root_.utils.Formatters.buildUppercaseQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(value)%
›
Ê
_root_.java.time.LocalDate#V
ß
±
L_root_.scala.collection.immutable.StringLike#capitalize()Ljava/lang/String;.b
Î	Ú	X_root_.utils.Formatters.capitalizedAddress(Lmodels/Address;)Ljava/lang/String;.(address)%
´	±	_root_.scala.Predef.String#A
âí7_root_.java.time.LocalTime.;_root_.java.time.LocalTime#%
§™_root_.scala.Predef.String#/
⁄‰%app/utils/Formatters.scala@1867..1877$
˙_root_.utils.Formatters.v
’⁄l_root_.models.PropertyAddress#copy(Lscala/collection/Seq;Ljava/lang/String;)Lmodels/PropertyAddress;.(lines)'
’	⁄	_root_.models.Address#(line2)c
ÑñW_root_.utils.Formatters.capitalizedAddress(Lmodels/PropertyAddress;)Ljava/lang/String;.7
Œ’-_root_.models.Address.;_root_.models.Address#a
¬‘W_root_.utils.Formatters.capitalizedAddress(Lmodels/PropertyAddress;)Ljava/lang/String;.o
∂∫c_root_.utils.Formatters.buildQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(name)Q
ÓÔG_root_.scala.StringContext#s(Lscala/collection/Seq;)Ljava/lang/String;._
ÂÔU_root_.models.PropertyAddress.fromString(Ljava/lang/String;)Lmodels/PropertyAddress;.V
ïüL_root_.scala.collection.immutable.StringLike#capitalize()Ljava/lang/String;.%
Ã’_root_.java.time.LocalTime#;
ø√1_root_.java.lang.String#trim()Ljava/lang/String;.y
äèm_root_.utils.Formatters.buildUppercaseQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(value)l
óû`_root_.utils.Formatters.capitalizedAddress(Lmodels/PropertyAddress;)Ljava/lang/String;.(address)
¯¸_root_.java.time.O
ÑâE_root_.java.lang.String#split(Ljava/lang/String;)[Ljava/lang/String;.%
‘⁄_root_.scala.Predef.String#X
ª≈L_root_.utils.Formatters.formatTime(Ljava/time/LocalTime;)Ljava/lang/String;.i
•µ]_root_.utils.Formatters.buildQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.B
Ò¸8_root_.java.lang.String#toLowerCase()Ljava/lang/String;.Ç
èíx_root_.scala.collection.TraversableLike#map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;.<
ÂÁ2_root_.java.lang.Object#`!=`(Ljava/lang/Object;)Z.(
’‰_root_.models.PropertyAddress.<
†¢2_root_.java.lang.Object#`!=`(Ljava/lang/Object;)Z.a
°©W_root_.scala.collection.TraversableOnce#mkString(Ljava/lang/String;)Ljava/lang/String;.%
ÿﬁ_root_.scala.Predef.String#;
êî1_root_.java.lang.String#trim()Ljava/lang/String;.d
ÏÚZ_root_.java.time.LocalTime#format(Ljava/time/format/DateTimeFormatter;)Ljava/lang/String;.]
é†Q_root_.utils.Formatters.capitalizedAddress(Ljava/lang/String;)Ljava/lang/String;._
¨ΩU_root_.java.time.format.DateTimeFormatter.;_root_.java.time.format.DateTimeFormatter#'
Û	¯	_root_.models.Address#(line4)
íò_root_.scala.Option#b
æ	≈	X_root_.utils.Formatters.capitalizedAddress(Lmodels/Address;)Ljava/lang/String;.(address)/
ïü%app/utils/Formatters.scala@1670..1680A
˛á7_root_.java.time.LocalDate.;_root_.java.time.LocalDate#y
 “o_root_.models.PropertyAddress#copy(Lscala/collection/Seq;Ljava/lang/String;)Lmodels/PropertyAddress;.(postcode)v
Öél_root_.java.time.format.DateTimeFormatter.ofPattern(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;.>
π¡4_root_.scala.collection.TraversableOnce#nonEmpty()Z.'
∆	À	_root_.models.Address#(line1)j
¡»`_root_.utils.Formatters.capitalizedAddress(Lmodels/PropertyAddress;)Ljava/lang/String;.(address)
Û˜_root_.java.*
Ç
ä
 _root_.models.Address#(postcode)/
˘É%app/utils/Formatters.scala@1867..1877\
¯
¸
R_root_.utils.Formatters.formatDate(Ljava/time/LocalDate;)Ljava/lang/String;.(date)B
Ñè8_root_.java.lang.String#toUpperCase()Ljava/lang/String;.Ç
ÎÓx_root_.scala.collection.TraversableLike#map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;.j
›‰`_root_.utils.Formatters.capitalizedAddress(Lmodels/PropertyAddress;)Ljava/lang/String;.(address)2
›Â(_root_.models.PropertyAddress#(postcode)4
Ñï*_root_.java.time.format.DateTimeFormatter."≤
T_root_.scala.collection.TraversableLike#filter(Lscala/Function1;)Ljava/lang/Object;.Ÿfilter (p: Function1[A, Boolean]): Repr"
_root_.scala.Function1#"3
+_root_.scala.collection.TraversableLike#[A]"
_root_.scala.Boolean#"6
 ._root_.scala.collection.TraversableLike#[Repr]")
_root_.scala.collection.Seq.	ÄÑSeq"/
_root_.java.time.LocalTime#Ä†à	LocalTime"ç
R_root_.utils.Formatters.formatTime(Ljava/time/LocalTime;)Ljava/lang/String;.(time)7Ätime	LocalTime"!
	_root_.java.time.LocalTime#"F
*_root_.java.time.format.DateTimeFormatter.ÄÑàDateTimeFormatter"Q
_root_.scala.Predef.String#2@StringString"
_root_.java.lang.String#"–
Q_root_.utils.Formatters.capitalizedAddress(Ljava/lang/String;)Ljava/lang/String;.{capitalizedAddress(address: String): String"#

_root_.scala.Predef.String#"#
_root_.scala.Predef.String#"‘
U_root_.models.PropertyAddress.fromString(Ljava/lang/String;)Lmodels/PropertyAddress;.{
fromString(str: String): PropertyAddress"#
_root_.scala.Predef.String#"&
_root_.models.PropertyAddress#"|
8_root_.java.lang.String#toUpperCase()Ljava/lang/String;.@ÑÄÄtoUpperCase
(): String" 

_root_.java.lang.String#"’
E_root_.java.lang.String#split(Ljava/lang/String;)[Ljava/lang/String;.ãÑÄÄsplit(x$1: String): Array[String]" 
_root_.java.lang.String#"
_root_.scala.Array#" 
_root_.java.lang.String#"
_root_.java.ÄàÄjava"a
#_root_.java.lang.String#isEmpty()Z.:ÑÄÄisEmpty(): Boolean"
_root_.scala.Boolean#"˘
l_root_.java.time.format.DateTimeFormatter.ofPattern(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;.àÑÄÄ	ofPattern (x$1: String): DateTimeFormatter" 
_root_.java.lang.String#"2
 *_root_.java.time.format.DateTimeFormatter#"ç
R_root_.utils.Formatters.formatDate(Ljava/time/LocalDate;)Ljava/lang/String;.(date)7Ädate	LocalDate"!
	_root_.java.time.LocalDate#"¿
e_root_.models.PropertyAddress#copy(Lscala/collection/Seq;Ljava/lang/String;)Lmodels/PropertyAddress;.÷copy7(lines: Seq[String], postcode: String): PropertyAddress"!
_root_.scala.package.Seq#"#
_root_.scala.Predef.String#"#
%_root_.scala.Predef.String#"&
(7_root_.models.PropertyAddress#"§
l_root_.utils.Formatters.buildUppercaseQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(name)4ÄnameString"!
_root_.scala.Predef.String#"ƒ
f_root_.utils.Formatters.buildUppercaseQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.ŸbuildUppercaseQueryParams-(name: String, value: Option[String]): String"#
_root_.scala.Predef.String#"
_root_.scala.Option#"#
#_root_.scala.Predef.String#"#
'-_root_.scala.Predef.String#"/
_root_.java.time.LocalDate#Ä†à	LocalDate"Ã
m_root_.utils.Formatters.buildUppercaseQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(value)[ÄvalueOption[String]"
_root_.scala.Option#"#
_root_.scala.Predef.String#"(
_root_.models.Address#Ä†ÄAddress"°
ä_root_.models.Address#`<init>`(Lscala/Option;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V.ë<init>s(addressUnitId: Option[Int], line1: String, line2: String, line3: String, line4: String, postcode: String): Address"
_root_.scala.Option#"
_root_.scala.Int#"#
$*_root_.scala.Predef.String#"#
39_root_.scala.Predef.String#"#
BH_root_.scala.Predef.String#"#
QW_root_.scala.Predef.String#"#
ci_root_.scala.Predef.String#"
ls_root_.models.Address#"V
_root_.models.Address#(line3)5Åline3String"!
_root_.scala.Predef.String#"è
X_root_.utils.Formatters.capitalizedAddress(Lmodels/Address;)Ljava/lang/String;.(address)3ÄaddressAddress"
_root_.models.Address#"„
W_root_.utils.Formatters.capitalizedAddress(Lmodels/PropertyAddress;)Ljava/lang/String;.ácapitalizedAddress"(address: PropertyAddress): String"&

_root_.models.PropertyAddress#"#
"_root_.scala.Predef.String#"$
_root_.scala.Option#Ä†Option"V
_root_.models.Address#(line4)5Åline4String"!
_root_.scala.Predef.String#"√
d_root_.utils.Formatters.buildQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(value)[ÄvalueOption[String]"
_root_.scala.Option#"#
_root_.scala.Predef.String#"j
4_root_.scala.collection.TraversableOnce#nonEmpty()Z.2nonEmptyBoolean"
_root_.scala.Boolean#"|
8_root_.java.lang.String#toLowerCase()Ljava/lang/String;.@ÑÄÄtoLowerCase
(): String" 

_root_.java.lang.String#"∫
x_root_.scala.collection.TraversableLike#map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;.ΩmapQ[B, That] => (f: Function1[A, B])(implicit bf: CanBuildFrom[Repr, B, That]): That"
_root_.scala.Function1#"3
+_root_.scala.collection.TraversableLike#[A]"É
{_root_.scala.collection.TraversableLike#map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;.[B]"5
/;-_root_.scala.collection.generic.CanBuildFrom#"6
<@._root_.scala.collection.TraversableLike#[Repr]"É
BC{_root_.scala.collection.TraversableLike#map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;.[B]"Ü
EI~_root_.scala.collection.TraversableLike#map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;.[That]"Ü
MQ~_root_.scala.collection.TraversableLike#map(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;.[That]"V
_root_.models.Address#(line2)5Åline2String"!
_root_.scala.Predef.String#"V
_root_.models.Address#(line1)5Åline1String"!
_root_.scala.Predef.String#"b
%app/utils/Formatters.scala@1867..18779
paramValueString"!
_root_.scala.Predef.String#"‰
Z_root_.java.time.LocalDate#format(Ljava/time/format/DateTimeFormatter;)Ljava/lang/String;.ÖÑÄÄformat (x$1: DateTimeFormatter): String"2
*_root_.java.time.format.DateTimeFormatter#" 
 _root_.java.lang.String#"â
L_root_.scala.collection.immutable.StringLike#capitalize()Ljava/lang/String;.9
capitalizeString"!
_root_.scala.Predef.String#"»
W_root_.scala.collection.TraversableOnce#mkString(Ljava/lang/String;)Ljava/lang/String;.mmkString(sep: String): String"#
_root_.scala.Predef.String#"#
_root_.scala.Predef.String#"√
L_root_.utils.Formatters.formatDate(Ljava/time/LocalDate;)Ljava/lang/String;.s
formatDate(date: LocalDate): String"#
_root_.java.time.LocalDate#"#
_root_.scala.Predef.String#"ß
`_root_.utils.Formatters.capitalizedAddress(Lmodels/PropertyAddress;)Ljava/lang/String;.(address)CÄaddressPropertyAddress"$
_root_.models.PropertyAddress#"d
(_root_.models.PropertyAddress#(postcode)8ÅpostcodeString"!
_root_.scala.Predef.String#")
_root_.java.time.format.ÄàÄformat"÷
G_root_.scala.StringContext#s(Lscala/collection/Seq;)Ljava/lang/String;.äs(args: <repeated>[Any]): String""
_root_.scala.`<repeated>`#"
_root_.scala.Any#"#
_root_.scala.Predef.String#"|
 _root_.scala.Option#`<init>`()V.X<init>(): Option[A]"

_root_.scala.Option#"
_root_.scala.Option#[A]"´
o_root_.models.PropertyAddress#copy(Lscala/collection/Seq;Ljava/lang/String;)Lmodels/PropertyAddress;.(postcode)8ÄpostcodeString"!
_root_.scala.Predef.String#"
_root_.models.ÄàÄmodels"õ
c_root_.utils.Formatters.buildQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.(name)4ÄnameString"!
_root_.scala.Predef.String#" 
_root_.java.time.ÄàÄtime"Ø
R_root_.models.PropertyAddress#`<init>`(Lscala/collection/Seq;Ljava/lang/String;)V.ÿ<init>7(lines: Seq[String], postcode: String): PropertyAddress"!
_root_.scala.package.Seq#"#
_root_.scala.Predef.String#"#
%_root_.scala.Predef.String#"&
(7_root_.models.PropertyAddress#"8
_root_.models.PropertyAddress#Ä†ÄPropertyAddress"7
_root_.models.PropertyAddress.ÄÑPropertyAddress"
_root_.utils.ÄàÄutils"≤
]_root_.utils.Formatters.buildQueryParams(Ljava/lang/String;Lscala/Option;)Ljava/lang/String;.–buildQueryParams-(name: String, value: Option[String]): String"#
_root_.scala.Predef.String#"
_root_.scala.Option#"#
#_root_.scala.Predef.String#"#
'-_root_.scala.Predef.String#" 
O_root_.utils.Formatters.capitalizedAddress(Lmodels/Address;)Ljava/lang/String;.wcapitalizedAddress(address: Address): String"

_root_.models.Address#"#
_root_.scala.Predef.String#"b
%app/utils/Formatters.scala@1670..16809
paramValueString"!
_root_.scala.Predef.String#"ï
Z_root_.utils.Formatters.capitalizedAddress(Ljava/lang/String;)Ljava/lang/String;.(address)7ÄaddressString"!
_root_.scala.Predef.String#"ç
2_root_.java.lang.Object#`!=`(Ljava/lang/Object;)Z.WÑÄ!=(x$1: Any): Boolean"
	_root_.scala.Any#"
_root_.scala.Boolean#"n
1_root_.java.lang.String#trim()Ljava/lang/String;.9ÑÄÄtrim
(): String" 

_root_.java.lang.String#"Õ
l_root_.models.PropertyAddress#copy(Lscala/collection/Seq;Ljava/lang/String;)Lmodels/PropertyAddress;.(lines)]ÄlinesSeq[String]"
_root_.scala.package.Seq#"#

_root_.scala.Predef.String#"Ü
%_root_.models.PropertyAddress#(lines)]ÅlinesSeq[String]"
_root_.scala.package.Seq#"#

_root_.scala.Predef.String#"\
 _root_.models.Address#(postcode)8ÅpostcodeString"!
_root_.scala.Predef.String#",
_root_.utils.Formatters.ÄÑ
Formatters"|
;_root_.models.PropertyAddress#toString()Ljava/lang/String;.=toString
(): String"#

_root_.scala.Predef.String#"∏
W_root_.scala.collection.TraversableLike#filterNot(Lscala/Function1;)Ljava/lang/Object;.‹	filterNot (p: Function1[A, Boolean]): Repr"
_root_.scala.Function1#"3
+_root_.scala.collection.TraversableLike#[A]"
_root_.scala.Boolean#"6
 ._root_.scala.collection.TraversableLike#[Repr]"√
L_root_.utils.Formatters.formatTime(Ljava/time/LocalTime;)Ljava/lang/String;.s
formatTime(time: LocalTime): String"#
_root_.java.time.LocalTime#"#
_root_.scala.Predef.String#" 
_root_.scala.Some.
ÄÑSome"‰
Z_root_.java.time.LocalTime#format(Ljava/time/format/DateTimeFormatter;)Ljava/lang/String;.ÖÑÄÄformat (x$1: DateTimeFormatter): String"2
*_root_.java.time.format.DateTimeFormatter#" 
 _root_.java.lang.String#2«
Ω	Ω	*.apply[String]
_star_.x
p_root_.scala.collection.generic.GenericCompanion#apply(Lscala/collection/Seq;)Lscala/collection/GenTraversable;.#
_root_.scala.Predef.String#2ä
ìîscala.Predef.augmentString(*)P
H_root_.scala.Predef.augmentString(Ljava/lang/String;)Ljava/lang/String;.
_star_.2≈
Ô†#scala.Predef.refArrayOps[String](*)`
X_root_.scala.Predef.refArrayOps([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;.#
_root_.scala.Predef.String#
!"_star_.2‡
††l*(scala.Array.canBuildFrom[String](((ClassTag.apply[String](classOf[java.lang.String])): ClassTag[String])))
_star_.&
Ya_root_.scala.reflect.ClassTag#W
.3O_root_.scala.reflect.ClassTag.apply(Ljava/lang/Class;)Lscala/reflect/ClassTag;.i
a_root_.scala.Array.canBuildFrom(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;.#
4:_root_.scala.Predef.String##
!_root_.scala.Predef.String##
bh_root_.scala.Predef.String#2ä
•
¶
scala.Predef.augmentString(*)P
H_root_.scala.Predef.augmentString(Ljava/lang/String;)Ljava/lang/String;.
_star_.2ü
§
§
*[String, Seq[String]]
_star_.#
_root_.scala.Predef.String#$

_root_.scala.collection.Seq##
_root_.scala.Predef.String#2∆
ØØ,*(scala.collection.Seq.canBuildFrom[String])
_star_.#
$*_root_.scala.Predef.String#Z
#R_root_.scala.collection.Seq.canBuildFrom()Lscala/collection/generic/CanBuildFrom;.2ä
∑∏scala.Predef.augmentString(*)P
H_root_.scala.Predef.augmentString(Ljava/lang/String;)Ljava/lang/String;.
_star_.2ò
íí*[String, Array[String]]
_star_.#
_root_.scala.Predef.String##
_root_.scala.Predef.String#

_root_.scala.Array#2¬
Ôé#scala.Predef.refArrayOps[String](*)`
X_root_.scala.Predef.refArrayOps([Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;. 
_root_.java.lang.String#
!"_star_.2x
©©*.apply
_star_.V
N_root_.scala.StringContext.apply(Lscala/collection/Seq;)Lscala/StringContext;.2ü
ÓÓ*[String, Seq[String]]
_star_.#
_root_.scala.Predef.String#$

_root_.scala.collection.Seq##
_root_.scala.Predef.String#2∆
≤
≤
,*(scala.collection.Seq.canBuildFrom[String])
_star_.#
$*_root_.scala.Predef.String#Z
#R_root_.scala.collection.Seq.canBuildFrom()Lscala/collection/generic/CanBuildFrom;.2x
ÓÓ*.apply
_star_.V
N_root_.scala.StringContext.apply(Lscala/collection/Seq;)Lscala/StringContext;.:Scala211BÆ/*
 * Copyright 2017 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package utils

import java.time.{LocalDate, LocalTime}
import java.time.format.DateTimeFormatter

import models.{Address, PropertyAddress}

object Formatters {

  def capitalizedAddress(address: PropertyAddress): String = {
    address.copy(
      lines = address.lines.map(_.toLowerCase().trim.split(" ").map(_.capitalize).mkString(" ")).filter(_.nonEmpty),
      postcode = address.postcode.toUpperCase()
    ).toString
  }

  def capitalizedAddress(address: String): String = {
    capitalizedAddress(PropertyAddress.fromString(address))
  }

  def capitalizedAddress(address: Address): String = {
    Seq(address.line1, address.line2, address.line3, address.line4, address.postcode).filterNot(_.isEmpty).map(_.capitalize) mkString ", "
  }

  def formatDate(date: LocalDate): String = {
    date.format(DateTimeFormatter.ofPattern("d MMMM yyyy"))
  }

  def formatTime(time: LocalTime): String = {
    time.format(DateTimeFormatter.ofPattern("hh:mm a"))
  }
  def buildQueryParams(name : String, value : Option[String]) : String = {
    value match { case Some(paramValue) if paramValue != "" => s"&$name=${paramValue.trim}" ; case _ => ""}
  }

  def buildUppercaseQueryParams(name : String, value : Option[String]) : String = {
    value match { case Some(paramValue) if paramValue != "" => s"&$name=${paramValue.toUpperCase.trim}" ; case _ => ""}
  }

}
Japp/utils/Formatters.scala