
¥uB
á	ã	8_root_.connectors.BusinessRatesValuationConnector#(http)
¯˝_root_.javax.|
‡	„	r_root_.scala.concurrent.Future#map(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.
°¶_root_.scala.?
ΩÀ5_root_.uk.gov.hmrc.play.config.inject.ServicesConfig#D
Õ—8_root_.connectors.BusinessRatesValuationConnector#(http)
ù°_root_.play.api.libs./
ê	ú	%_root_.uk.gov.hmrc.http.HttpResponse#)
Ôı_root_.scala.concurrent.Future#
Ã–_root_.scala.Long#"
Ã–_root_.uk.gov.hmrc.http.f
˜\_root_.uk.gov.hmrc.play.config.ServicesConfig#baseUrl(Ljava/lang/String;)Ljava/lang/String;.?
ˆÑ5_root_.uk.gov.hmrc.play.config.inject.ServicesConfig#
ˆ˝_root_.scala.Boolean#
ÂÔ_root_.connectors.ò
¶µã_root_.connectors.BusinessRatesValuationConnector#isViewable(JJLuk/gov/hmrc/http/HeaderCarrier;)Lscala/concurrent/Future;.(authorisationId)Q
û	ü	G_root_.scala.StringContext#s(Lscala/collection/Seq;)Ljava/lang/String;.
∑ª_root_.scala.Long#
◊Ÿ
_root_.uk.0
Ôı&_root_.uk.gov.hmrc.play.config.inject.à
¥¥|_root_.connectors.BusinessRatesValuationConnector#`<init>`(Luk/gov/hmrc/play/config/inject/ServicesConfig;Lconfig/WSHttp;)V.W
”‡M_root_.uk.gov.hmrc.http.HeaderCarrier.;_root_.uk.gov.hmrc.http.HeaderCarrier#A
Öã7_root_.javax.inject.Inject.;_root_.javax.inject.Inject#ñ
¥	√	ã_root_.connectors.BusinessRatesValuationConnector#isViewable(JJLuk/gov/hmrc/http/HeaderCarrier;)Lscala/concurrent/Future;.(authorisationId)*
¢¨ _root_.play.api.libs.concurrent.0
ﬂÏ&_root_.uk.gov.hmrc.http.HeaderCarrier#
îò_root_.play.>
ã™2_root_.connectors.BusinessRatesValuationConnector#B
„Ê6_root_.connectors.BusinessRatesValuationConnector#url."
ß±_root_.scala.concurrent.î
–	›	â_root_.connectors.BusinessRatesValuationConnector#isViewable(JJLuk/gov/hmrc/http/HeaderCarrier;)Lscala/concurrent/Future;.(assessmentRef)
√∆_root_.uk.gov.
ﬁ‚_root_.uk.gov.hmrc.
ôú_root_.play.api.@
°	§	6_root_.connectors.BusinessRatesValuationConnector#url.
⁄›_root_.uk.gov.I
≤∏?_root_.scala.concurrent.Future.;_root_.scala.concurrent.Future#)
ËÓ_root_.uk.gov.hmrc.play.config.F
µª:_root_.connectors.BusinessRatesValuationConnector#(config)1
≤≤'_root_.javax.inject.Inject#`<init>`()V.
åí_root_.config.Ü
õ•z_root_.connectors.BusinessRatesValuationConnector#isViewable(JJLuk/gov/hmrc/http/HeaderCarrier;)Lscala/concurrent/Future;.
”Ÿ_root_.config.WSHttp#
˛Ñ_root_.javax.inject.4
Ñ
ï
*_root_.uk.gov.hmrc.http.NotFoundException#5
ìô+_root_.config.WSHttp.;_root_.config.WSHttp#D
ÈÔ:_root_.connectors.BusinessRatesValuationConnector#(config)U
‚ÓK_root_.uk.gov.hmrc.http.HttpResponse.;_root_.uk.gov.hmrc.http.HttpResponse#ä
€›~_root_.connectors.BusinessRatesValuationConnector#isViewable(JJLuk/gov/hmrc/http/HeaderCarrier;)Lscala/concurrent/Future;.(hc)4
≠∂*_root_.play.api.libs.concurrent.Execution.
«À_root_.uk.gov.hmrc."
„Á_root_.uk.gov.hmrc.play.%
¨≤_root_.javax.inject.Inject#4
Å*_root_.uk.gov.hmrc.http.NotFoundException#ñ
Ω â_root_.connectors.BusinessRatesValuationConnector#isViewable(JJLuk/gov/hmrc/http/HeaderCarrier;)Lscala/concurrent/Future;.(assessmentRef)>
∑¿4_root_.play.api.libs.concurrent.Execution.Implicits.Ü
Ú	˘	|_root_.scala.concurrent.Future#recover(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.r
¡œh_root_.play.api.libs.concurrent.Execution.Implicits.defaultContext()Lscala/concurrent/ExecutionContext;.ª
å	è	∞_root_.uk.gov.hmrc.http.HttpGet#GET(Ljava/lang/String;Luk/gov/hmrc/http/HttpReads;Luk/gov/hmrc/http/HeaderCarrier;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.
¿¬
_root_.uk."5
 _root_.play.api.libs.concurrent.ÄàÄ
concurrent"$
_root_.config.WSHttp#Ä@WSHttp"ñ
:_root_.connectors.BusinessRatesValuationConnector#(config)XÄconfigServicesConfig";
5_root_.uk.gov.hmrc.play.config.inject.ServicesConfig#":
%_root_.uk.gov.hmrc.http.HttpResponse#Ä@HttpResponse" 
_root_.scala.Long#
Ä†Long"ƒ
ã_root_.connectors.BusinessRatesValuationConnector#isViewable(JJLuk/gov/hmrc/http/HeaderCarrier;)Lscala/concurrent/Future;.(authorisationId)4ÄauthorisationIdLong"
_root_.scala.Long#"'
_root_.connectors.ÄàÄ
connectors"$
_root_.play.api.libs.ÄàÄlibs"'
_root_.uk.gov.hmrc.http.ÄàÄhttp"
_root_.javax.ÄàÄjavax"
_root_.play.api.
ÄàÄapi"[
!_root_.scala.Boolean#`<init>`()V.6<init>(): Boolean"
_root_.scala.Boolean#".
_root_.scala.concurrent.Future#Ä@Future"G
4_root_.play.api.libs.concurrent.Execution.Implicits.ÄÑ	Implicits"¿
â_root_.connectors.BusinessRatesValuationConnector#isViewable(JJLuk/gov/hmrc/http/HeaderCarrier;)Lscala/concurrent/Future;.(assessmentRef)2ÄassessmentRefLong"
_root_.scala.Long#"L
5_root_.uk.gov.hmrc.play.config.inject.ServicesConfig#Ä@ServicesConfig"=
*_root_.play.api.libs.concurrent.Execution.ÄÑ	Execution"®
|_root_.scala.concurrent.Future#recover(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.ßrecoverZ[U] => (pf: PartialFunction[Throwable, U])(implicit executor: ExecutionContext): Future[U]"%
_root_.scala.PartialFunction#"'
%_root_.scala.package.Throwable#"á
'(_root_.scala.concurrent.Future#recover(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.[U]"1
>N)_root_.scala.concurrent.ExecutionContext#"'
QW_root_.scala.concurrent.Future#"á
XY_root_.scala.concurrent.Future#recover(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.[U]",
_root_.javax.inject.Inject#Ä†ÄInject"«
~_root_.connectors.BusinessRatesValuationConnector#isViewable(JJLuk/gov/hmrc/http/HeaderCarrier;)Lscala/concurrent/Future;.(hc)EÄÅ hcHeaderCarrier",
&_root_.uk.gov.hmrc.http.HeaderCarrier#"ò
z_root_.connectors.BusinessRatesValuationConnector#isViewable(JJLuk/gov/hmrc/http/HeaderCarrier;)Lscala/concurrent/Future;.ô
isViewableY(authorisationId: Long, assessmentRef: Long)(implicit hc: HeaderCarrier): Future[Boolean]"
_root_.scala.Long#"
'+_root_.scala.Long#".
:G&_root_.uk.gov.hmrc.http.HeaderCarrier#"'
JP_root_.scala.concurrent.Future#"
QX_root_.scala.Boolean#"7
&_root_.uk.gov.hmrc.play.config.inject.ÄàÄinject"Ó
|_root_.connectors.BusinessRatesValuationConnector#`<init>`(Luk/gov/hmrc/play/config/inject/ServicesConfig;Lconfig/WSHttp;)V.Ì<init>G(config: ServicesConfig, http: WSHttp): BusinessRatesValuationConnector"=
	5_root_.uk.gov.hmrc.play.config.inject.ServicesConfig#"
%_root_.config.WSHttp#":
(G2_root_.connectors.BusinessRatesValuationConnector#"

_root_.uk.	ÄàÄuk"%
_root_.javax.inject.ÄàÄinject"‘
\_root_.uk.gov.hmrc.play.config.ServicesConfig#baseUrl(Ljava/lang/String;)Ljava/lang/String;.tbaseUrl(serviceName: String): String"#
_root_.scala.Predef.String#"#
_root_.scala.Predef.String#"j
8_root_.connectors.BusinessRatesValuationConnector#(http).ÄhttpWSHttp"
_root_.config.WSHttp#"
_root_.uk.gov.
ÄàÄgov"˜
ô_root_.uk.gov.hmrc.http.HeaderCarrier#`<init>`(Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Ljava/lang/String;JLscala/collection/Seq;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/Option;Lscala/collection/Seq;)V.ÿ<init>¯(authorization: Option[Authorization], userId: Option[UserId], token: Option[Token], forwarded: Option[ForwardedFor], sessionId: Option[SessionId], requestId: Option[RequestId], requestChain: RequestChain, nsStamp: Long, extraHeaders: Seq[Tuple2[String, String]], trueClientIp: Option[String], trueClientPort: Option[String], gaToken: Option[String], gaUserId: Option[String], deviceID: Option[String], akamaiReputation: Option[AkamaiReputation], otherHeaders: Seq[Tuple2[String, String]]): HeaderCarrier"
_root_.scala.Option#"6
$._root_.uk.gov.hmrc.http.logging.Authorization#"
/5_root_.scala.Option#"'
6<_root_.uk.gov.hmrc.http.UserId#"
FL_root_.scala.Option#"&
MR_root_.uk.gov.hmrc.http.Token#"
`f_root_.scala.Option#"5
gs-_root_.uk.gov.hmrc.http.logging.ForwardedFor#"
Åá_root_.scala.Option#"4
àë*_root_.uk.gov.hmrc.http.logging.SessionId#"
ü•_root_.scala.Option#"4
¶Ø*_root_.uk.gov.hmrc.http.logging.RequestId#"7
¿Ã-_root_.uk.gov.hmrc.http.logging.RequestChain#"
◊€_root_.scala.Long#"#
ÎÓ_root_.scala.package.Seq#"
Ôı_root_.scala.Tuple2#"%
ˆ¸_root_.scala.Predef.String#"%
˛Ñ_root_.scala.Predef.String#"
ñú_root_.scala.Option#"%
ù£_root_.scala.Predef.String#"
∂º_root_.scala.Option#"%
Ω√_root_.scala.Predef.String#"
œ’_root_.scala.Option#"%
÷‹_root_.scala.Predef.String#"
ÈÔ_root_.scala.Option#"%
ˆ_root_.scala.Predef.String#"
Éâ_root_.scala.Option#"%
äê_root_.scala.Predef.String#"
•´_root_.scala.Option#";
¨º1_root_.uk.gov.hmrc.http.logging.AkamaiReputation#"#
Õ–_root_.scala.package.Seq#"
—◊_root_.scala.Tuple2#"%
ÿﬁ_root_.scala.Predef.String#"%
‡Ê_root_.scala.Predef.String#"0
Î¯&_root_.uk.gov.hmrc.http.HeaderCarrier#"l
6_root_.connectors.BusinessRatesValuationConnector#url.2urlString"!
_root_.scala.Predef.String#"i
'_root_.javax.inject.Inject#`<init>`()V.>àÄÄ<init>
(): Inject"#

_root_.javax.inject.Inject#"&
_root_.scala.Boolean#Ä†Boolean"
_root_.play.ÄàÄplay"-
_root_.scala.concurrent.ÄàÄ
concurrent"√
h_root_.play.api.libs.concurrent.Execution.Implicits.defaultContext()Lscala/concurrent/ExecutionContext;.WÑÄ defaultContextExecutionContext"/
)_root_.scala.concurrent.ExecutionContext#"0
_root_.uk.gov.hmrc.play.config.ÄàÄconfig"÷
G_root_.scala.StringContext#s(Lscala/collection/Seq;)Ljava/lang/String;.äs(args: <repeated>[Any]): String""
_root_.scala.`<repeated>`#"
_root_.scala.Any#"#
_root_.scala.Predef.String#"Z
2_root_.connectors.BusinessRatesValuationConnector#$Ä BusinessRatesValuationConnector"R
_root_.scala.Long#`<init>`()V.0<init>(): Long"
_root_.scala.Long#">
&_root_.uk.gov.hmrc.http.HeaderCarrier#Ä†ÄHeaderCarrier"
_root_.config.ÄàÄconfig"
_root_.scala.ÄàÄscala"D
*_root_.uk.gov.hmrc.http.NotFoundException#Ä NotFoundException"Ú
r_root_.scala.concurrent.Future#map(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.˚mapK[S] => (f: Function1[T, S])(implicit executor: ExecutionContext): Future[S]"
_root_.scala.Function1#"*
"_root_.scala.concurrent.Future#[T]"}
u_root_.scala.concurrent.Future#map(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.[S]"1
/?)_root_.scala.concurrent.ExecutionContext#"'
BH_root_.scala.concurrent.Future#"}
IJu_root_.scala.concurrent.Future#map(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.[S]"˛
∞_root_.uk.gov.hmrc.http.HttpGet#GET(Ljava/lang/String;Luk/gov/hmrc/http/HttpReads;Luk/gov/hmrc/http/HeaderCarrier;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.»GETd[A] => (url: String)(implicit rds: HttpReads[A], hc: HeaderCarrier, ec: ExecutionContext): Future[A]"#
_root_.scala.Predef.String#"*
#,"_root_.uk.gov.hmrc.http.HttpReads#"º
-.≥_root_.uk.gov.hmrc.http.HttpGet#GET(Ljava/lang/String;Luk/gov/hmrc/http/HttpReads;Luk/gov/hmrc/http/HeaderCarrier;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.[A]".
5B&_root_.uk.gov.hmrc.http.HeaderCarrier#"1
HX)_root_.scala.concurrent.ExecutionContext#"'
[a_root_.scala.concurrent.Future#"º
bc≥_root_.uk.gov.hmrc.http.HttpGet#GET(Ljava/lang/String;Luk/gov/hmrc/http/HttpReads;Luk/gov/hmrc/http/HeaderCarrier;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.[A]""
_root_.uk.gov.hmrc.ÄàÄhmrc"'
_root_.uk.gov.hmrc.play.ÄàÄplay"÷
H_root_.uk.gov.hmrc.http.NotFoundException#`<init>`(Ljava/lang/String;)V.â<init>$(message: String): NotFoundException"#

_root_.scala.Predef.String#"2
$*_root_.uk.gov.hmrc.http.NotFoundException#2ú
†
†
D*.apply(play.api.libs.concurrent.Execution.Implicits.defaultContext)
_star_.K
C_root_.scala.Function1#apply(Ljava/lang/Object;)Ljava/lang/Object;.p
5Ch_root_.play.api.libs.concurrent.Execution.Implicits.defaultContext()Lscala/concurrent/ExecutionContext;.2B
„	„	
*[Boolean]
_star_.
	_root_.scala.Boolean#2x
û	û	*.apply
_star_.V
N_root_.scala.StringContext.apply(Lscala/collection/Seq;)Lscala/StringContext;.2B
˘	˘	
*[Boolean]
_star_.
	_root_.scala.Boolean#2•
ﬂ	ﬂ	f*(uk.gov.hmrc.http.HttpReads.readRaw, hc, play.api.libs.concurrent.Execution.Implicits.defaultContext)
_star_.2
$*_root_.uk.gov.hmrc.http.HttpReads.readRaw.p
Weh_root_.play.api.libs.concurrent.Execution.Implicits.defaultContext()Lscala/concurrent/ExecutionContext;.2…
Ô	Ô	>*(play.api.libs.concurrent.Execution.Implicits.defaultContext)
_star_.p
/=h_root_.play.api.libs.concurrent.Execution.Implicits.defaultContext()Lscala/concurrent/ExecutionContext;.:Scala211Bß
/*
 * Copyright 2017 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package connectors

import javax.inject.Inject

import play.api.libs.concurrent.Execution.Implicits.defaultContext
import uk.gov.hmrc.play.config.inject.ServicesConfig
import config.WSHttp
import scala.concurrent.Future
import uk.gov.hmrc.http.{ HeaderCarrier, HttpResponse, NotFoundException }

class BusinessRatesValuationConnector @Inject()(config: ServicesConfig, http: WSHttp) {
  val url = config.baseUrl("business-rates-valuation")

  def isViewable(authorisationId: Long, assessmentRef: Long)(implicit hc: HeaderCarrier): Future[Boolean] = {
    http.GET[HttpResponse](s"$url/property-link/$authorisationId/assessment/$assessmentRef") map { _ => true } recover { case _: NotFoundException => false }
  }
}
J4app/connectors/BusinessRatesValuationConnector.scala