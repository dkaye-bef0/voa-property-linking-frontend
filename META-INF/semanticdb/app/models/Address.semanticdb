
Ÿ )
áã_root_.play.api.libs.json.Json."
òü_root_.models.Address#%
√…_root_.scala.Predef.String#,
¯Ä _root_.models.Address#(postcode)
ÂÎ_root_.models.)
¥∏_root_.play.api.libs.json.Json.%
Çà_root_.scala.Predef.String#"
íô_root_.models.Address.
˘¸_root_.play.api.)
´±_root_.models.Address.format.$
ÇÜ_root_.play.api.libs.json.ó
üüä_root_.models.Address#`<init>`(Lscala/Option;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V.%
ˆ_root_.scala.Predef.String#
˝Å_root_.play.api.libs.%
“ÿ_root_.scala.Predef.String#)
⁄ﬂ_root_.models.Address#(line3))
ÈÓ_root_.models.Address#(line4))
º¡_root_.models.Address#(line1)
∂π_root_.scala.Int#1
†≠%_root_.models.Address#(addressUnitId)
Ù¯_root_.play. 
¿«_root_.models.Address#
Øµ_root_.scala.Option#%
·Á_root_.scala.Predef.String#N
πøD_root_.play.api.libs.json.Json.format()Lplay/api/libs/json/OFormat;.)
À–_root_.models.Address#(line2)"„
D_root_.play.api.libs.json.Json.format()Lplay/api/libs/json/OFormat;.ö format[A] => OFormat[A]"*
"_root_.play.api.libs.json.OFormat#"O
G_root_.play.api.libs.json.Json.format()Lplay/api/libs/json/OFormat;.[A]")
_root_.play.api.libs.json.ÄàÄjson"
%_root_.models.Address#(addressUnitId)VÅaddressUnitIdOption[Int]"
_root_.scala.Option#"

_root_.scala.Int#"Q
_root_.scala.Predef.String#2@StringString"
_root_.java.lang.String#"â
_root_.models.Address.format.hÅÄ formatOFormat[Address]"(
"_root_.play.api.libs.json.OFormat#"
_root_.models.Address#"$
_root_.play.api.libs.ÄàÄlibs"
_root_.play.api.
ÄàÄapi"-
_root_.play.api.libs.json.Json.
ÄÑJson"'
_root_.models.Address.ÄÑAddress"(
_root_.models.Address#Ä†ÄAddress"V
_root_.models.Address#(line3)5Åline3String"!
_root_.scala.Predef.String#"°
ä_root_.models.Address#`<init>`(Lscala/Option;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V.ë<init>s(addressUnitId: Option[Int], line1: String, line2: String, line3: String, line4: String, postcode: String): Address"
_root_.scala.Option#"
_root_.scala.Int#"#
$*_root_.scala.Predef.String#"#
39_root_.scala.Predef.String#"#
BH_root_.scala.Predef.String#"#
QW_root_.scala.Predef.String#"#
ci_root_.scala.Predef.String#"
ls_root_.models.Address#"$
_root_.scala.Option#Ä†Option"V
_root_.models.Address#(line4)5Åline4String"!
_root_.scala.Predef.String#"V
_root_.models.Address#(line2)5Åline2String"!
_root_.scala.Predef.String#"V
_root_.models.Address#(line1)5Åline1String"!
_root_.scala.Predef.String#"
_root_.play.ÄàÄplay"
_root_.models.ÄàÄmodels"|
 _root_.scala.Option#`<init>`()V.X<init>(): Option[A]"

_root_.scala.Option#"
_root_.scala.Option#[A]"O
_root_.scala.Int#`<init>`()V..<init>(): Int"
_root_.scala.Int#"\
 _root_.models.Address#(postcode)8ÅpostcodeString"!
_root_.scala.Predef.String#"
_root_.scala.Int#	Ä†Int:Scala211BÀ/*
 * Copyright 2017 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package models

import play.api.libs.json.Json

case class Address(addressUnitId: Option[Int], line1: String, line2: String, line3: String, line4: String, postcode: String)

object Address {
  implicit val format = Json.format[Address]
}
Japp/models/Address.scala