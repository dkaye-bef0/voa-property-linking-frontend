
∫N
êñD_root_.play.api.libs.json.Json.format()Lplay/api/libs/json/OFormat;.1
°≠%_root_.models.Accounts#(organisation)
Ù¯_root_.play.#
Ë_root_.models.Accounts.$
ÇÜ_root_.play.api.libs.json.)
ãè_root_.play.api.libs.json.Json.+
Ω√_root_.models.Accounts#(person)
˝Å_root_.play.api.libs.
˘¸_root_.play.api.%
Øª_root_.models.GroupAccount#!
óü_root_.models.Accounts#
ÂÎ_root_.models.*
Çà_root_.models.Accounts.format.)
áã_root_.play.api.libs.json.Json.#
ò†_root_.models.Accounts#f
††Z_root_.models.Accounts#`<init>`(Lmodels/GroupAccount;Lmodels/DetailedIndividualAccount;)V.2
≈ﬁ(_root_.models.DetailedIndividualAccount#"å
_root_.models.Accounts.format.jÅÄ formatOFormat[Accounts]"(
"_root_.play.api.libs.json.OFormat#"
_root_.models.Accounts#"„
D_root_.play.api.libs.json.Json.format()Lplay/api/libs/json/OFormat;.ö format[A] => OFormat[A]"*
"_root_.play.api.libs.json.OFormat#"O
G_root_.play.api.libs.json.Json.format()Lplay/api/libs/json/OFormat;.[A]")
_root_.play.api.libs.json.ÄàÄjson"y
_root_.models.Accounts#(person)VÅpersonDetailedIndividualAccount".
(_root_.models.DetailedIndividualAccount#"Î
t_root_.models.DetailedIndividualAccount#`<init>`(Ljava/lang/String;Ljava/lang/String;JJLmodels/IndividualDetails;)V.Ú<init>Ü(externalId: String, trustId: String, organisationId: Long, individualId: Long, details: IndividualDetails): DetailedIndividualAccount"#
_root_.scala.Predef.String#"#
$_root_.scala.Predef.String#"
6:_root_.scala.Long#"
JN_root_.scala.Long#"(
Yj _root_.models.IndividualDetails#"1
mÜ(_root_.models.DetailedIndividualAccount#"$
_root_.play.api.libs.ÄàÄlibs"
_root_.play.api.
ÄàÄapi"-
_root_.play.api.libs.json.Json.
ÄÑJson"¬
s_root_.models.GroupAccount#`<init>`(JLjava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;ZJ)V. <init>è(id: Long, groupId: String, companyName: String, addressId: Int, email: String, phone: String, isAgent: Boolean, agentCode: Long): GroupAccount"
	_root_.scala.Long#"#
_root_.scala.Predef.String#"#
)/_root_.scala.Predef.String#"
<?_root_.scala.Int#"#
HN_root_.scala.Predef.String#"#
W]_root_.scala.Predef.String#"
ho_root_.scala.Boolean#"
|Ä_root_.scala.Long#"%
Éè_root_.models.GroupAccount#"2
_root_.models.GroupAccount#Ä†ÄGroupAccount"
_root_.play.ÄàÄplay"
_root_.models.ÄàÄmodels"¨
Z_root_.models.Accounts#`<init>`(Lmodels/GroupAccount;Lmodels/DetailedIndividualAccount;)V.Õ<init>I(organisation: GroupAccount, person: DetailedIndividualAccount): Accounts"#
_root_.models.GroupAccount#"0
%>(_root_.models.DetailedIndividualAccount#"
AI_root_.models.Accounts#")
_root_.models.Accounts.ÄÑAccounts"*
_root_.models.Accounts#Ä†ÄAccounts"L
(_root_.models.DetailedIndividualAccount# Ä†ÄDetailedIndividualAccount"k
%_root_.models.Accounts#(organisation)BÅorganisationGroupAccount"!
_root_.models.GroupAccount#:Scala211B£/*
 * Copyright 2017 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package models

import play.api.libs.json.Json

case class Accounts(organisation: GroupAccount, person: DetailedIndividualAccount)

object Accounts {
  implicit val format = Json.format[Accounts]
}
Japp/models/Accounts.scala