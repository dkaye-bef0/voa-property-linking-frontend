
ø@0
ùÆ&_root_.repositories.SessionRepository#6
úß,_root_.modules.FixSessionIndex#(sessionRepo)
˙Ä_root_.javax.inject.
êú_root_.repositories.+
Í˘_root_.modules.FixSessionIndex#/
≠Ø#_root_.modules.FixSessionIndex#(ec)6
ø ,_root_.modules.FixSessionIndex#(sessionRepo)3
±¡)_root_.scala.concurrent.ExecutionContext#A
®≤7_root_.uk.gov.hmrc.mongo.ReactiveRepository#collection.£
≥¡ò_root_.reactivemongo.api.CollectionMetaCommands#indexesManager(Lscala/concurrent/ExecutionContext;)Lreactivemongo/api/indexes/CollectionIndexesManager;.T
äëH_root_.modules.FixSessionIndex#run(I)Lscala/concurrent/Future;.(version)v
¬∆l_root_.reactivemongo.api.indexes.CollectionIndexesManager#drop(Ljava/lang/String;)Lscala/concurrent/Future;.z
ÉÉn_root_.modules.FixSessionIndex#`<init>`(Lrepositories/SessionRepository;Lscala/concurrent/ExecutionContext;)V.
Ù˘_root_.javax.A
Åá7_root_.javax.inject.Inject.;_root_.javax.inject.Inject#0
ë¢&_root_.repositories.SessionRepository##
À‘_root_.modules.MongoTask#
ÂÏ_root_.modules.%
˚Å_root_.javax.inject.Inject#£
÷‰ò_root_.reactivemongo.api.CollectionMetaCommands#indexesManager(Lscala/concurrent/ExecutionContext;)Lreactivemongo/api/indexes/CollectionIndexesManager;.Ü
¯ˇ|_root_.scala.concurrent.Future#recover(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.
†§_root_.scala.Unit#.
’’$_root_.java.lang.Object#`<init>`()V.)
ôü_root_.scala.concurrent.Future#
ìñ_root_.scala.Int#v
ÂÈl_root_.reactivemongo.api.indexes.CollectionIndexesManager#drop(Ljava/lang/String;)Lscala/concurrent/Future;.A
À’7_root_.uk.gov.hmrc.mongo.ReactiveRepository#collection.7
ÊÒ+_root_.modules.FixSessionIndex#upToVersion.8
Ñè,_root_.modules.FixSessionIndex#(sessionRepo)]
…ŸS_root_.scala.concurrent.ExecutionContext.;_root_.scala.concurrent.ExecutionContext#Ü
‹„|_root_.scala.concurrent.Future#recover(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.
∑º_root_.scala.I
€·?_root_.scala.concurrent.Future.;_root_.scala.concurrent.Future#"
Ω«_root_.scala.concurrent.1
ÅÅ'_root_.javax.inject.Inject#`<init>`()V.K
Üâ?_root_.modules.FixSessionIndex#run(I)Lscala/concurrent/Future;."c
$_root_.java.lang.Object#`<init>`()V.;àÄÄ<init>
(): Object" 

_root_.java.lang.Object#"ú
7_root_.uk.gov.hmrc.mongo.ReactiveRepository#collection.aÅÄ@
collectionJSONCollection"?
9_root_.reactivemongo.play.json.collection.JSONCollection#"Ü
l_root_.reactivemongo.api.indexes.CollectionIndexesManager#drop(Ljava/lang/String;)Lscala/concurrent/Future;.ïÑÄdrop (indexName: String): Future[Int]"#
_root_.scala.Predef.String#"'
_root_.scala.concurrent.Future#"
_root_.scala.Int#"
_root_.javax.ÄàÄjavax"…
?_root_.modules.FixSessionIndex#run(I)Lscala/concurrent/Future;.Örun(version: Int): Future[Unit]"

_root_.scala.Int#"'
_root_.scala.concurrent.Future#"
_root_.scala.Unit#" 
_root_.scala.Unit#
Ä†Unit".
_root_.scala.concurrent.Future#Ä@Future"®
|_root_.scala.concurrent.Future#recover(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.ßrecoverZ[U] => (pf: PartialFunction[Throwable, U])(implicit executor: ExecutionContext): Future[U]"%
_root_.scala.PartialFunction#"'
%_root_.scala.package.Throwable#"á
'(_root_.scala.concurrent.Future#recover(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.[U]"1
>N)_root_.scala.concurrent.ExecutionContext#"'
QW_root_.scala.concurrent.Future#"á
XY_root_.scala.concurrent.Future#recover(Lscala/PartialFunction;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;.[U]",
_root_.javax.inject.Inject#Ä†ÄInject"r
#_root_.modules.FixSessionIndex#(ec)KÄÅ ecExecutionContext"/
)_root_.scala.concurrent.ExecutionContext#"+
_root_.repositories.ÄàÄrepositories"v
H_root_.modules.FixSessionIndex#run(I)Lscala/concurrent/Future;.(version)*ÄversionInt"
_root_.scala.Int#"€
n_root_.modules.FixSessionIndex#`<init>`(Lrepositories/SessionRepository;Lscala/concurrent/ExecutionContext;)V.Ë<init>P(sessionRepo: SessionRepository)(implicit ec: ExecutionContext): FixSessionIndex".
&_root_.repositories.SessionRepository#"1
.>)_root_.scala.concurrent.ExecutionContext#"'
AP_root_.modules.FixSessionIndex#"%
_root_.javax.inject.ÄàÄinject"@
&_root_.repositories.SessionRepository#Ä SessionRepository"Å
,_root_.modules.FixSessionIndex#(sessionRepo)QÄsessionRepoSessionRepository",
&_root_.repositories.SessionRepository#"\
+_root_.modules.FixSessionIndex#upToVersion.-upToVersionInt"
_root_.scala.Int#"i
'_root_.javax.inject.Inject#`<init>`()V.>àÄÄ<init>
(): Inject"#

_root_.javax.inject.Inject#"B
)_root_.scala.concurrent.ExecutionContext#Ä@ExecutionContext"-
_root_.scala.concurrent.ÄàÄ
concurrent"R
_root_.scala.Unit#`<init>`()V.0<init>(): Unit"
_root_.scala.Unit#"!
_root_.modules.ÄàÄmodules"‚
ò_root_.reactivemongo.api.CollectionMetaCommands#indexesManager(Lscala/concurrent/ExecutionContext;)Lreactivemongo/api/indexes/CollectionIndexesManager;.ƒindexesManager9(implicit ec: ExecutionContext): CollectionIndexesManager"1
)_root_.scala.concurrent.ExecutionContext#"B
!9:_root_.reactivemongo.api.indexes.CollectionIndexesManager#"
_root_.scala.ÄàÄscala"ë
Z_root_.repositories.SessionRepository#`<init>`(Ljava/lang/String;Lreactivemongo/api/DB;)V.≤<init>+(formId: String, db: DB): SessionRepository"#
	_root_.scala.Predef.String#"$
_root_.reactivemongo.api.DB#".
+&_root_.repositories.SessionRepository#"O
_root_.scala.Int#`<init>`()V..<init>(): Int"
_root_.scala.Int#"+
_root_.modules.MongoTask#Ä@	MongoTask"
_root_.scala.Int#	Ä†Int"7
_root_.modules.FixSessionIndex#Ä FixSessionIndex2’
êê&*.apply[Unit](FixSessionIndex.this.ec)
_star_.K
C_root_.scala.Function1#apply(Ljava/lang/Object;)Ljava/lang/Object;.
_root_.scala.Unit#+
#%#_root_.modules.FixSessionIndex#(ec)2`
‰‰*(FixSessionIndex.this.ec)
_star_.+
#_root_.modules.FixSessionIndex#(ec)2@
„„	*[AnyVal]
_star_.
_root_.scala.AnyVal#2’
ÙÙ&*.apply[Unit](FixSessionIndex.this.ec)
_star_.K
C_root_.scala.Function1#apply(Ljava/lang/Object;)Ljava/lang/Object;.
_root_.scala.Unit#+
#%#_root_.modules.FixSessionIndex#(ec)2@
ˇˇ	*[AnyVal]
_star_.
_root_.scala.AnyVal#2`
¡¡*(FixSessionIndex.this.ec)
_star_.+
#_root_.modules.FixSessionIndex#(ec)2`
É	É	*(FixSessionIndex.this.ec)
_star_.+
#_root_.modules.FixSessionIndex#(ec):Scala211Bä	/*
 * Copyright 2017 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package modules
import javax.inject.Inject

import repositories.SessionRepository

import scala.concurrent.{ExecutionContext, Future}

class FixSessionIndex @Inject()(sessionRepo: SessionRepository)(implicit ec: ExecutionContext) extends MongoTask {
  override val upToVersion = 2

  override def run(version: Int): Future[Unit] = {
    for {
      _ <- sessionRepo.collection.indexesManager.drop("sessionTTL") recover { case _ => () }
      _ <- sessionRepo.collection.indexesManager.drop("workingSessionTTL") recover { case _ => () }
    } yield ()
  }
}
J!app/modules/FixSessionIndex.scala